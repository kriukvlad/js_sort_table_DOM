{"version":3,"sources":["scripts/main.js"],"names":["thead","document","querySelectorAll","tbody","querySelector","tbodyArr","Array","from","forEach","item","addEventListener","e","columnIndex","indexOf","target","sort","a","b","valueA","cells","textContent","trim","valueB","numA","parseFloat","replace","numB","toString","localeCompare","undefined","numeric","innerHTML","append"],"mappings":";AAAA,aAQA,SAAA,EAAA,GAAA,OAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,IAAA,SAAA,IAAA,MAAA,IAAA,UAAA,wIAAA,SAAA,EAAA,EAAA,GAAA,GAAA,EAAA,CAAA,GAAA,iBAAA,EAAA,OAAA,EAAA,EAAA,GAAA,IAAA,EAAA,GAAA,SAAA,KAAA,GAAA,MAAA,GAAA,GAAA,MAAA,WAAA,GAAA,EAAA,cAAA,EAAA,EAAA,YAAA,MAAA,QAAA,GAAA,QAAA,EAAA,MAAA,KAAA,GAAA,cAAA,GAAA,2CAAA,KAAA,GAAA,EAAA,EAAA,QAAA,GAAA,SAAA,EAAA,GAAA,GAAA,oBAAA,QAAA,MAAA,EAAA,OAAA,WAAA,MAAA,EAAA,cAAA,OAAA,MAAA,KAAA,GAAA,SAAA,EAAA,GAAA,GAAA,MAAA,QAAA,GAAA,OAAA,EAAA,GAAA,SAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,UAAA,EAAA,EAAA,QAAA,IAAA,IAAA,EAAA,EAAA,EAAA,MAAA,GAAA,EAAA,EAAA,IAAA,EAAA,GAAA,EAAA,GAAA,OAAA,EAJA,IAAMA,EAAQC,SAASC,iBAAiB,eAClCC,EAAQF,SAASG,cAAc,SAC/BC,EAAWC,MAAMC,KAAKJ,EAAMD,iBAAiB,OAEnDF,EAAMQ,QAAQ,SAACC,GACbA,EAAKC,iBAAiB,QAAS,SAACC,GACxBC,IAAAA,EAAc,EAAIZ,GAAOa,QAAQF,EAAEG,QAEzCT,EAASU,KAAK,SAACC,EAAGC,GACVC,IAAAA,EAASF,EAAEG,MAAMP,GAAaQ,YAAYC,OAC1CC,EAASL,EAAEE,MAAMP,GAAaQ,YAAYC,OAG1CE,EAAOC,WAAWN,EAAOO,QAAQ,aAAc,MAAQP,EACvDQ,EAAOF,WAAWF,EAAOG,QAAQ,aAAc,MAAQH,EAGzD,MAAgB,iBAATC,GAAqC,iBAATG,EAC9BH,EAAOG,EAGTH,EACJI,WACAC,cAAcF,EAAKC,gBAAYE,EAAW,CAAEC,SAAS,MAG1D3B,EAAM4B,UAAY,GAClB5B,EAAM6B,OAAN7B,MAAAA,EAAgBE,EAAAA","file":"main.3b77d6cb.js","sourceRoot":"..\\src","sourcesContent":["'use strict';\n\n// write code here\n\nconst thead = document.querySelectorAll('thead tr th');\nconst tbody = document.querySelector('tbody');\nconst tbodyArr = Array.from(tbody.querySelectorAll('tr'));\n\nthead.forEach((item) => {\n  item.addEventListener('click', (e) => {\n    const columnIndex = [...thead].indexOf(e.target);\n\n    tbodyArr.sort((a, b) => {\n      const valueA = a.cells[columnIndex].textContent.trim();\n      const valueB = b.cells[columnIndex].textContent.trim();\n\n      // Перевіряємо, чи це числа\n      const numA = parseFloat(valueA.replace(/[^0-9.-]+/g, '')) || valueA;\n      const numB = parseFloat(valueB.replace(/[^0-9.-]+/g, '')) || valueB;\n\n      // Порівняння чисел або тексту\n      if (typeof numA === 'number' && typeof numB === 'number') {\n        return numA - numB;\n      }\n\n      return numA\n        .toString()\n        .localeCompare(numB.toString(), undefined, { numeric: true });\n    });\n\n    tbody.innerHTML = '';\n    tbody.append(...tbodyArr);\n  });\n});\n"]}